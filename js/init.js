// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –∞—Å—Å–µ—Ç–æ–≤ –≤ Vite-–±–∏–ª–¥–µ
// –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –î–û –æ—Å–Ω–æ–≤–Ω–æ–≥–æ JS, –∑–∞–º–µ–Ω—è–µ—Ç –ø—É—Ç–∏ –∫ –≤–∏–¥–µ–æ –∏ –≥–æ—Ç–æ–≤–∏—Ç –∞–Ω–∏–º–∞—Ü–∏–∏

import { getVideoUrl, getAnimation, getI18n } from './assets.js'

// 1. –ó–∞–º–µ–Ω—è–µ–º –ø—É—Ç–∏ –∫ –≤–∏–¥–µ–æ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–∑ Vite
function initVideoSources() {
	const videos = document.querySelectorAll('video[src^="./video/"]')
	const isDev = import.meta.env.DEV
	
	videos.forEach(video => {
		const oldSrc = video.getAttribute('src')
		// –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "A-Club PRO 02.mp4")
		const filename = oldSrc.replace('./video/', '')
		
		// –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π URL –∏–∑ –º–æ–¥—É–ª—è assets
		const newSrc = getVideoUrl(filename)
		
		if (newSrc) {
			video.setAttribute('src', newSrc)
			video.setAttribute('data-original-src', oldSrc) // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
			if (isDev) console.log(`‚úì Video updated: ${filename}`)
		} else {
			console.warn(`‚úó Video not found: ${filename}`)
		}
	})
	
	if (isDev) console.log(`üìπ Initialized ${videos.length} video elements`)
}

// 2. –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Ö–µ–ª–ø–µ—Ä –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∞–Ω–∏–º–∞—Ü–∏–π
// –≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –¥—Ä—É–≥–∏–º —Å–∫—Ä–∏–ø—Ç–∞–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—à—É —Ñ—É–Ω–∫—Ü–∏—é –≤–º–µ—Å—Ç–æ fetch
window.loadLottieAnimation = async function(animationName) {
	try {
		const data = await getAnimation(animationName)
		if (!data) {
			throw new Error(`Animation "${animationName}" not found`)
		}
		return data
	} catch (error) {
		console.error(`Failed to load animation "${animationName}":`, error)
		return null
	}
}

// 3. –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Ö–µ–ª–ø–µ—Ä –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
window.loadI18n = async function(lang) {
	try {
		const data = await getI18n(lang)
		if (!data) {
			throw new Error(`I18n file "${lang}" not found`)
		}
		return data
	} catch (error) {
		console.error(`Failed to load i18n "${lang}":`, error)
		return null
	}
}

// 4. –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º fetch –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø–æ–¥–º–µ–Ω—ã –ø—É—Ç–µ–π –∫ –∞—Å—Å–µ—Ç–∞–º
const originalFetch = window.fetch
const isDev = import.meta.env.DEV

window.fetch = function(...args) {
	const url = args[0]
	
	// –ï—Å–ª–∏ —ç—Ç–æ –∑–∞–ø—Ä–æ—Å –∫ –∞–Ω–∏–º–∞—Ü–∏–∏
	if (typeof url === 'string' && url.includes('/assets/animations/') && url.endsWith('.json')) {
		const filename = url.split('/').pop().replace('.json', '')
		if (isDev) console.log(`üé® Intercepted animation fetch: ${filename}`)
		
		return getAnimation(filename).then(data => {
			if (!data) {
				throw new Error(`Animation not found: ${filename}`)
			}
			// –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–µ–π–∫–æ–≤—ã–π Response –æ–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏
			return new Response(JSON.stringify(data), {
				status: 200,
				headers: { 'Content-Type': 'application/json' }
			})
		})
	}
	
	// –ï—Å–ª–∏ —ç—Ç–æ –∑–∞–ø—Ä–æ—Å –∫ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
	if (typeof url === 'string' && url.includes('/assets/i18n/') && url.endsWith('.json')) {
		const lang = url.split('/').pop().replace('.json', '')
		if (isDev) console.log(`üåê Intercepted i18n fetch: ${lang}`)
		
		return getI18n(lang).then(data => {
			if (!data) {
				throw new Error(`I18n file not found: ${lang}`)
			}
			return new Response(JSON.stringify(data), {
				status: 200,
				headers: { 'Content-Type': 'application/json' }
			})
		})
	}
	
	// –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π fetch
	return originalFetch.apply(this, args)
}

// 5. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
if (document.readyState === 'loading') {
	document.addEventListener('DOMContentLoaded', initVideoSources)
} else {
	// DOM —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω
	initVideoSources()
}

if (import.meta.env.DEV) {
	console.log('üöÄ Assets init script loaded')
}

